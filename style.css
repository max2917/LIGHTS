*:focus {
	outline: none;
}

body {
	background-color:	var(--offBlack);
	font-family:		courier;
	font-size:			36;
	/*min-width:			400px;
	max-width:			1000px;*/
	margin: auto;
	min-width: 650px;
	max-width: 1000px;
}

:root {
	--offWhite:		rgb(250, 250, 250);
	--dimWhite:		rgb(210, 210, 210);
	--offBlack:		#111111;
	--buttonSize:	70px;
	--sliderHeight:	100px;
	--cornerRadius:	35px;
	--fontSize:		40px;
	--sidePadd:		25px;
	--vertMargin:	25px;
	--font:			roboto;
}

/* Mobile Size */
@media screen and (max-width: 500px) {
	/* if screen and size is less than 500 then... */
	body {
		background-color: var(--offBlack);
	}
	.buttonColor {
		width: 10px;
	}
}
@media screen and (max-width: 500px) {
	.slider {
		height: 50px;
	}
}
/* Custom Font */
@font-face {
	font-family: roboto;
	src:	url("/assets/Roboto-Thin.ttf") format("woff2"),
			url("/assets/Roboto-Thin.ttf") format("woff");
}

/* --- DIVS --- */
.gap {
	/* used for spacing in flex boxes */
	width: var(--sidePadd);
}
.sectionTitle {
	display:		flex;
	color:			var(--dimWhite);
	margin-bottom:	calc(var(--vertMargin)/3);
	padding-left:	8px;
	padding-right:	8px;
	font-size:		18px;
}
.sectionLine {
	display:		flex;
	margin-bottom:	calc(var(--vertMargin)/3);
	background:
		linear-gradient(
			to bottom,
			rgba(0, 0, 0, 0),
			rgba(0, 0, 0, 0) 48%,
			var(--dimWhite) 48%,
			var(--dimWhite) 52%,
			rgba(0, 0, 0, 0) 52%
		)
}
.sectionLineL { flex-grow: 1; }
.sectionLineR { flex-grow: 15; }
.sectionContainer {
	width:				100%;
	display:			flex;
	flex-wrap:			nowrap;
	flex-direction:		row;
	justify-content:	space-evenly;
}
.devicesContainerOuter {
	margin-bottom:	var(--vertMargin);
	padding-left:	var(--sidePadd);
	padding-right:	var(--sidePadd);
}
.animationButtonContainer {
	margin-bottom:	var(--vertMargin);
	padding-left:	var(--sidePadd);
	padding-right:	var(--sidePadd);
}
.animationButtonRow {
	display:		flex;
	margin-bottom:	var(--vertMargin);
}
.slideContainer {
	margin-bottom:	var(--vertMargin);
	padding-left:	var(--sidePadd);
	padding-right:	var(--sidePadd);
}
.colorGrid {
	width:		100%;
	display:	flex;
	flex-wrap:	wrap;
}
.colorGridRow {
	padding-bottom:		1%;
	padding-left:		var(--sidePadd);
	padding-right:		var(--sidePadd);
	width:				100%;
	display:			flex;
	justify-content:	space-between;
}
/* --- END DIVS --- */

/* --- BUTTONS --- */
button {
	border:				none;
	border-radius:		var(--cornerRadius);
	color:				black;					/* Font color */
	text-align:			center;
	text-decoration:	none;
	display:			inline-block;
	font-size:			var(--fontSize);
	font-family:		var(--font);
	height:				var(--buttonSize);
	text-transform:		uppercase;
}
.buttonAnimation {
	height:		100px;
	flex-grow:	1;
	width:		50%;
}
.buttonColor {
	width:			var(--buttonSize);
	padding:		0px 0px;
	border-style:	solid;
	border-color:	var(--offWhite);
	border-width:	0px;
}
.buttonRainbow {
	background:
		linear-gradient(
			to bottom,
			var(--offWhite),
			var(--offWhite) 90%,
			rgba(250, 250, 250, 0.0) 90%
		),
		linear-gradient(
			to right,
			red,
			orange,
			yellow,
			green,
			cyan,
			blue,
			violet
		);
}
.buttonPride {
	background:
		linear-gradient(
			to bottom,
			var(--offWhite),
			var(--offWhite) 90%,
			rgba(250, 250, 250, 0.0) 90%
		),
		linear-gradient(
			to right,
			rgb(229, 0, 0) 16.67%,
			rgb(255, 141, 0) 16.67%,
			rgb(255, 141, 0) 33.34%,
			rgb(255, 238, 0) 33.34%,
			rgb(255, 238, 0) 50%,
			rgb(0, 129, 33) 50%,
			rgb(0, 129, 33) 66.67%,
			rgb(0, 76, 255) 66.67%,
			rgb(0, 76, 255) 83.34%,
			rgb(118, 1, 136) 83.34%
		);
}
.buttonStrobe {
	background:
		linear-gradient(
			to bottom,
			var(--offWhite),
			var(--offWhite) 90%,
			rgba(250, 250, 250, 0.0) 90%
		),
		linear-gradient(
			to right,
			rgb(0, 0, 0) 50%,
			rgb(200, 200, 255) 50%
		);
}
.buttonPolice {
	background:
		linear-gradient(
			to bottom,
			var(--offWhite),
			var(--offWhite) 90%,
			rgba(250, 250, 250, 0.0) 90%
		),
		linear-gradient(
			to right,
			red 50%,
			blue 50%
		);
}
.buttonFire {
	background:
		linear-gradient(
			to bottom,
			var(--offWhite),
			var(--offWhite) 90%,
			rgba(250, 250, 250, 0.0) 90%
		),
		linear-gradient(
			to right,
			red 50%,
			white 50%
		);
}
/* --- END BUTTONS --- */

/* --- SLIDER --- */
.slider {
	-webkit-appearance:	none;		/* Override default CSS styles */
	appearance:			none;
	border-radius:		var(--cornerRadius);
	width:				100%;					/* Full-width */
	height:				var(--sliderHeight);	/* Specified height */
	background:			#d3d3d3;				/* Grey background */
	outline:			none;					/* Remove outline */
	margin-left:		0px;					/* This is necessary */
	margin-top:			0px;					/* This is necessary */
	margin-bottom:		0px;					/* This may not do anything */
	margin-right:		0px;					/* This may not do anything */
	/*opacity: 0.7;				/* Set transparency (for mouse-over effects on hover) */
	/*-webkit-transition: .2s;	/* 0.2 seconds transition on hover */
	/*transition: opacity .2s;*/
}
.sliderSV {
	-webkit-appearance:	none;		/* Override default CSS styles */
	appearance:			none;
	border-radius:		var(--cornerRadius);
	width:				100%;					/* Full-width */
	height:				var(--sliderHeight);	/* Specified height */
	background:			#d3d3d3;				/* Grey background */
	outline:			none;					/* Remove outline */
	margin-left:		0px;					/* This is necessary */
	margin-top:			0px;					/* This is necessary */
	margin-bottom:		0px;					/* This may not do anything */
	margin-right:		0px;					/* This may not do anything */
	/*opacity: 0.7;				/* Set transparency (for mouse-over effects on hover) */
	/*-webkit-transition: .2s;	/* 0.2 seconds transition on hover */
	/*transition: opacity .2s;*/
}
.sliderH {
	/* Generate rainbow background */
	background: linear-gradient(
		to right,
		#ff0000,
		#ffff00,
		#00ff00,
		#00ffff,
		#0000ff,
		#ff00ff,
		#ff0000
	);
}
.sliderS {
	background: linear-gradient(
		to right,
		white,
		#00ffff
	);
	height: calc(var(--sliderHeight)/2);
}
.sliderV {
	background: linear-gradient(
		to right,
		black,
		#00ffff
	);
	height: calc(var(--sliderHeight)/2);
}
.sliderAnimationSpeed {
	background:
		linear-gradient(
			to right,
			var(--offWhite) 9.75%,

			var(--dimWhite) 9.75%,
			var(--dimWhite) 19%,

			var(--offWhite) 19%,
			var(--offWhite) 27.75%,

			var(--dimWhite) 27.75%,
			var(--dimWhite) 36%,
			
			var(--offWhite) 36%,
			var(--offWhite) 43.75%,

			var(--dimWhite) 43.75%,
			var(--dimWhite) 51%,

			var(--offWhite) 51%,
			var(--offWhite) 57.75%,

			var(--dimWhite) 57.75%,
			var(--dimWhite) 64%,

			var(--offWhite) 64%,
			var(--offWhite) 69.75%,

			var(--dimWhite) 69.75%,
			var(--dimWhite) 75%,

			var(--offWhite) 75%,
			var(--offWhite) 79.75%,

			var(--dimWhite) 79.75%,
			var(--dimWhite) 84%,
			
			var(--offWhite) 84%,
			var(--offWhite) 87.75%,

			var(--dimWhite) 87.75%,
			var(--dimWhite) 91%,

			var(--offWhite) 91%,
			var(--offWhite) 93.75%,

			var(--dimWhite) 93.75%,
			var(--dimWhite) 96%,

			var(--offWhite) 96%,
			var(--offWhite) 97.75%,

			var(--dimWhite) 97.75%,
			var(--dimWhite) 99%,

			var(--offWhite) 99%
		);
}
.animationSpeedSliderShowHide {
	/* The order these are applied in HTML matters */
	/* Used to show hide animation slider with animation */
	height:		calc(var(--sliderHeight)/2);
	opacity:	1;
	transition:	opacity 0.33s, height 0.33s;
}
.animationSpeedSliderShowHide.hide {
	opacity:	0;
	height:		0px;
}
.sliderSV::-webkit-slider-thumb {
	/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
	-webkit-appearance: none;					/* Override default look */
	appearance:	none;
	width:		20px;							/* Set a specific slider handle width */
	height:		calc(var(--sliderHeight)/2);	/* Slider handle height */
	background:	var(--offBlack);				/* Green background */
	opacity:	0.5;
	cursor:		pointer;						/* Cursor on hover */
}
.slider::-webkit-slider-thumb {
	/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
	-webkit-appearance: none;			/* Override default look */
	appearance:	none;
	width:		20px;					/* Set a specific slider handle width */
	height:		var(--sliderHeight);	/* Slider handle height */
	background:	var(--offBlack);		/* Green background */
	opacity:	0.5;
	cursor:		pointer;				/* Cursor on hover */
}
.slider::-moz-range-thumb {
	width: 25px;				/* Set a specific slider handle width */
	height: 25px;				/* Slider handle height */
	background: #4CAF50;		/* Green background */
	cursor: pointer;			/* Cursor on hover */
}
/* --- END SLIDER --- */

/* --- Segmented Control --- */
/* https://codepen.io/S-Maas/pen/NAYvdK/?editors=1100 */
.devicesContainer {
	margin:			50;
	width:			100%/4;	/* div by number of buttons */
	display:		flex;
	max-width:		100%;
	padding-left:	var(--sidePadd);
	padding-right:	var(--sidePadd);
	position:		relative;
	/*user-select:	none;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	position:		relative;
	z-index:		1;*/

	/* Border and font color */
	font-size:		12px;
	border:			1px solid var(--offWhite);
	border-radius:	var(--cornerRadius);
	color:			var(--offWhite);
}
.deviceButton {
	/* Hide default radio buttons */
	display:	none;
}
.deviceButtonLabel {
	flex:			1;
	text-align:		center;
	white-space:	nowrap;
	overflow:		hidden;
	text-overflow:	ellipsis;
	cursor:			pointer;
	/*font-family:	var(--font);*/
	font-size:		var(--fontSize);
}
.deviceButton:checked + .deviceButtonLabel {
	background:	var(--offWhite);
	color:		var(--offBlack);
}
/* --- END Segmented Control --- */